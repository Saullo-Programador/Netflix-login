{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LARA\\\\Desktop\\\\ReactTS\\\\Sistema_Login\\\\Client\\\\src\\\\App\\\\Shared\\\\Contexts\\\\Auth\\\\AuthProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userToken = localStorage.getItem(\"user_token\");\n        const usersStorage = localStorage.getItem(\"users_bd\");\n        if (userToken && usersStorage) {\n          const hasUser = JSON.parse(usersStorage).find(storedUser => storedUser.email === JSON.parse(userToken).email);\n          if (hasUser) {\n            setUser(hasUser);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar dados do usuário:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const signin = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\") || \"[]\");\n    const hasUser = usersStorage.find(storedUser => storedUser.email === email);\n    if (hasUser) {\n      if (hasUser.email === email && hasUser.password === password) {\n        const token = Math.random().toString(36).substring(2);\n        localStorage.setItem(\"user_token\", JSON.stringify({\n          email,\n          token\n        }));\n        setUser({\n          ...hasUser,\n          password\n        }); // Mantenha a estrutura do objeto User\n        return;\n      } else {\n        return \"E-mail ou senha incorretos\";\n      }\n    } else {\n      return \"Usuário não cadastrado\";\n    }\n  };\n  const signup = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\") || \"[]\");\n    const hasUser = usersStorage.find(storedUser => storedUser.email === email);\n    if (hasUser) {\n      return \"Já existe uma conta com este e-mail\";\n    }\n    const newUser = [...usersStorage, {\n      email,\n      password\n    }];\n    localStorage.setItem(\"users_bd\", JSON.stringify(newUser));\n    return;\n  };\n  const signout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user_token\");\n  };\n  const authContextValue = {\n    user,\n    signed: !!user,\n    signin,\n    signup,\n    signout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Vot/f62t7wRmBOt67JIN3/+eVxk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useEffect","useState","AuthContext","jsxDEV","_jsxDEV","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchData","userToken","localStorage","getItem","usersStorage","hasUser","JSON","parse","find","storedUser","email","error","console","signin","password","token","Math","random","toString","substring","setItem","stringify","signup","newUser","signout","removeItem","authContextValue","signed","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LARA/Desktop/ReactTS/Sistema_Login/Client/src/App/Shared/Contexts/Auth/AuthProvider.tsx"],"sourcesContent":["import { useEffect, useState, ReactNode } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { User } from \"../../Types/User\";\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userToken = localStorage.getItem(\"user_token\");\r\n        const usersStorage = localStorage.getItem(\"users_bd\");\r\n\r\n        if (userToken && usersStorage) {\r\n          const hasUser = JSON.parse(usersStorage).find(\r\n            (storedUser: User) => storedUser.email === JSON.parse(userToken).email\r\n          );\r\n\r\n          if (hasUser) {\r\n            setUser(hasUser);\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Erro ao carregar dados do usuário:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const signin = (email: string, password: string): void | string => {\r\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\") || \"[]\");\r\n\r\n    const hasUser = usersStorage.find((storedUser: User) => storedUser.email === email);\r\n\r\n    if (hasUser) {\r\n      if (hasUser.email === email && hasUser.password === password) {\r\n        const token = Math.random().toString(36).substring(2);\r\n        localStorage.setItem(\"user_token\", JSON.stringify({ email, token }));\r\n        setUser({ ...hasUser, password }); // Mantenha a estrutura do objeto User\r\n        return;\r\n      } else {\r\n        return \"E-mail ou senha incorretos\";\r\n      }\r\n    } else {\r\n      return \"Usuário não cadastrado\";\r\n    }\r\n  };\r\n\r\n  const signup = (email: string, password: string): void | string => {\r\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\") || \"[]\");\r\n\r\n    const hasUser = usersStorage.find((storedUser: User) => storedUser.email === email);\r\n\r\n    if (hasUser) {\r\n      return \"Já existe uma conta com este e-mail\";\r\n    }\r\n\r\n    const newUser: User[] = [...usersStorage, { email, password }];\r\n    localStorage.setItem(\"users_bd\", JSON.stringify(newUser));\r\n\r\n    return;\r\n  };\r\n\r\n  const signout = (): void => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user_token\");\r\n  };\r\n\r\n  const authContextValue = {\r\n    user,\r\n    signed: !!user,\r\n    signin,\r\n    signup,\r\n    signout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}