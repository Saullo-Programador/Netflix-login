{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LARA\\\\Desktop\\\\ReactTS\\\\Sistema_Login\\\\Client\\\\src\\\\App\\\\Shared\\\\Contexts\\\\Auth\\\\AuthProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AuthContext } from \"./AuthContexts\";\nimport { useApi } from \"../../Hooks/useApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const api = useApi();\n  const signin = async (email, password) => {\n    const data = await api.signin(email, password);\n    if (data.user && data.token) {\n      setUser(data.user);\n      return true;\n    }\n    return false;\n  };\n  const signout = async () => {\n    await api.logout();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signin,\n      signout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"nQSPUC6Lqy7F2KLcZRUauwvMcmc=\", false, function () {\n  return [useApi];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","AuthContext","useApi","jsxDEV","_jsxDEV","AuthProvider","children","_s","user","setUser","api","signin","email","password","data","token","signout","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LARA/Desktop/ReactTS/Sistema_Login/Client/src/App/Shared/Contexts/Auth/AuthProvider.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AuthContext } from \"./AuthContexts\";\r\nimport { User } from \"../../Types/User\";\r\nimport { useApi } from \"../../Hooks/useApi\";\r\n\r\nexport const AuthProvider = ({ children }: { children: JSX.Element}) => {\r\n\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const api = useApi();\r\n\r\n    const signin = async (email: string, password:string) => {\r\n        const data = await api.signin(email, password)\r\n        if(data.user && data.token) {\r\n            setUser(data.user);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const signout = async () => {\r\n        await api.logout();\r\n        setUser(null);\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{ user , signin , signout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAmC,CAAC,KAAK;EAAAC,EAAA;EAEpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMU,GAAG,GAAGR,MAAM,CAAC,CAAC;EAEpB,MAAMS,MAAM,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAe,KAAK;IACrD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;IAC9C,IAAGC,IAAI,CAACN,IAAI,IAAIM,IAAI,CAACC,KAAK,EAAE;MACxBN,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;MAClB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EAED,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMN,GAAG,CAACO,MAAM,CAAC,CAAC;IAClBR,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIL,OAAA,CAACH,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAGG,MAAM;MAAGK;IAAQ,CAAE;IAAAV,QAAA,EACpDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAhB,EAAA,CAxBYF,YAAY;EAAA,QAGTH,MAAM;AAAA;AAAAsB,EAAA,GAHTnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}