{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LARA\\\\Desktop\\\\ReactTS\\\\Sistema_Login\\\\Client\\\\src\\\\App\\\\Pages\\\\Signin\\\\SigninScreens.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../Shared/Contexts/Auth/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SigninScreens = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleEmailInput = event => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordInput = event => {\n    setPassword(event.target.value);\n  };\n  const handleSigninScreens = async () => {\n    if (email && password) {\n      const isLogged = await auth.signin(email, password);\n      if (isLogged) {\n        navigate('/');\n      } else {\n        alert(\"Não deu certo.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"P\\xE1gina Fechada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: handleEmailInput,\n      placeholder: \"Digite seu e-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: handlePasswordInput,\n      placeholder: \"Digite sua senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSigninScreens,\n      children: \"Logar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(SigninScreens, \"Rodi1lXasohstcuXHkBf2AA/Zf8=\", false, function () {\n  return [useNavigate];\n});\n_c = SigninScreens;\nvar _c;\n$RefreshReg$(_c, \"SigninScreens\");","map":{"version":3,"names":["useContext","useState","useNavigate","AuthContext","jsxDEV","_jsxDEV","SigninScreens","_s","auth","navigate","email","setEmail","password","setPassword","handleEmailInput","event","target","value","handlePasswordInput","handleSigninScreens","isLogged","signin","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LARA/Desktop/ReactTS/Sistema_Login/Client/src/App/Pages/Signin/SigninScreens.tsx"],"sourcesContent":["import { ChangeEvent, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Shared/Contexts/Auth/AuthContext\";\r\n\r\nexport const SigninScreens = () => {\r\n    const auth = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const handlePasswordInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSigninScreens = async () => {\r\n        if (email && password) {\r\n            const isLogged = await auth.signin(email, password);\r\n            if (isLogged) {\r\n                navigate('/');\r\n            } else {\r\n                alert(\"Não deu certo.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Página Fechada</h2>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={handleEmailInput}\r\n                placeholder=\"Digite seu e-mail\"\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordInput}\r\n                placeholder=\"Digite sua senha\"\r\n            />\r\n            <button onClick={handleSigninScreens}>Logar</button>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAAsBA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,IAAI,GAAGR,UAAU,CAACG,WAAW,CAAC;EACpC,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,gBAAgB,GAAIC,KAAoC,IAAK;IAC/DJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAoC,IAAK;IAClEF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIT,KAAK,IAAIE,QAAQ,EAAE;MACnB,MAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,MAAM,CAACX,KAAK,EAAEE,QAAQ,CAAC;MACnD,IAAIQ,QAAQ,EAAE;QACVX,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACHa,KAAK,CAAC,gBAAgB,CAAC;MAC3B;IACJ;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvBtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEP,KAAM;MACbmB,QAAQ,EAAEf,gBAAiB;MAC3BgB,WAAW,EAAC;IAAmB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFtB,OAAA;MACIuB,IAAI,EAAC,UAAU;MACfX,KAAK,EAAEL,QAAS;MAChBiB,QAAQ,EAAEX,mBAAoB;MAC9BY,WAAW,EAAC;IAAkB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFtB,OAAA;MAAQ0B,OAAO,EAAEZ,mBAAoB;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd,CAAC;AAAApB,EAAA,CA7CYD,aAAa;EAAA,QAELJ,WAAW;AAAA;AAAA8B,EAAA,GAFnB1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}